function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuthBoxHover(),this.handleNavStatus()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},FrontBase.prototype.handleNavStatus=function(){var t=window.location.href,n=window.location.protocol+"//"+window.location.host,e=t.replace(n,"");$(".nav li").each(function(t,n){n=$(n);if(n.children("a").attr("href")===e)return n.addClass("active"),!1})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent(),t.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smsCaptcha.addClass("disabled");var n=10;t.smsCaptcha.unbind("click");var e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),a=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),a.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,t=$(".sms-captcha-btn"),e=$(".signup-group input[name='telephone']");t.click(function(){var t=e.val();t||messageBox.showInfo("请输入手机号码！"),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200==t.code&&n.smsSuccessEvent()},fail:function(t){console.log(t)}})})},Auth.prototype.listenSigninEvent=function(){var a=this,t=$(".signin-group"),s=t.find("input[name='telephone']"),i=t.find("input[name='password']"),o=t.find("input[name='remember']");t.find(".submit-btn").click(function(t){t.preventDefault();var n=s.val(),e=i.val(),t=o.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:n,password:e,remember:t?1:0},success:function(t){a.hideEvent(),window.location.reload()}})})},Auth.prototype.listenSignupEvent=function(){var o=$(".signup-group");o.find(".submit-btn").click(function(t){t.preventDefault();var n=o.find("input[name='telephone']"),e=o.find("input[name='username']"),a=o.find("input[name='img_captcha']"),s=o.find("input[name='password1']"),i=o.find("input[name='password2']"),t=o.find("input[name='sms_captcha']"),n=n.val(),e=e.val(),a=a.val(),s=s.val(),i=i.val(),t=t.val();xfzajax.post({url:"/account/register/",data:{telephone:n,username:e,img_captcha:a,password1:s,password2:i,sms_captcha:t},success:function(t){window.location.reload()}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),t=n.getTime(),t=((new Date).getTime()-t)/1e3;return t<60?"刚刚":60<=t&&t<3600?(minutes=parseInt(t/60),minutes+"分钟前"):3600<t&&t<86400?(hours=parseInt(t/60/60),hours+"小时前"):86400<t&&t<1296e3?void(days=parseInt(t/60/60/24)):n.getFullYear()+"/"+n.getMonth()+"/"+n.getDay()+" "+n.getHours()+":"+n.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
