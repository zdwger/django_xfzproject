function Banner(){this.bannerWidth=798,this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUI=$("#banner-ul"),this.liList=this.bannerUI.children("li"),this.bannerCount=this.liList.length,this.pageControl=$(".page-control")}function Index(){var n=this;n.page=2,n.category_id=0,n.loadBtn=$("#load-more-btn")}Banner.prototype.initPageControl=function(){for(var n=this,t=0;t<n.bannerCount;t++){var e=$("<li></li>");n.pageControl.append(e),0===t&&e.addClass("active")}n.pageControl.css({width:12*n.bannerCount+16+16*(n.bannerCount-1)})},Banner.prototype.initBanner=function(){var n=this,t=n.liList.eq(0).clone(),e=n.liList.eq(n.bannerCount-1).clone();n.bannerUI.append(t),n.bannerUI.prepend(e),this.bannerUI.css({width:n.bannerWidth*(n.bannerCount+2),left:-n.bannerWidth})},Banner.prototype.toggleArrow=function(n){n?(this.leftArrow.show(),this.rightArrow.show()):(this.leftArrow.hide(),this.rightArrow.hide())},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.animate=function(){var n=this;n.bannerUI.stop().animate({left:-798*n.index},500);var t=0===(t=n.index)?n.bannerCount-1:t===n.bannerCount+1?0:n.index-1;n.pageControl.children("li").eq(t).addClass("active").siblings().removeClass("active")},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUI.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.listenArrowClick=function(){var n=this;n.leftArrow.click(function(){0===n.index?(n.bannerUI.css({left:-n.bannerCount*n.bannerWidth}),n.index=n.bannerCount-1):n.index--,n.animate()}),n.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUI.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenPageControl=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n+1,e.animate()})})},Index.prototype.listenLoadMoreEvent=function(){var t=this,e=$("#load-more-btn");e.click(function(){xfzajax.get({url:"/news/list/",data:{p:t.page,category_id:t.category_id},success:function(n){200===n.code&&(0<(n=n.data).length?(n=template("news-item",{newses:n}),$(".list-inner-group").append(n),t.page+=1):e.hide())}})})},Index.prototype.listenCategorySwitchEvent=function(){var r=this;$(".list-tab").children().click(function(){var e=$(this),i=e.attr("data-category");xfzajax.get({url:"/news/list/",data:{category_id:i,p:1},success:function(n){var t;200==n.code&&(t=n.data,n=template("news-item",{newses:t}),(t=$(".list-inner-group")).empty(),t.append(n),r.page=2,r.category_id=i,e.addClass("active").siblings().removeClass("active"),r.loadBtn.show())}})})},Index.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitchEvent()},Banner.prototype.run=function(){this.initPageControl(),this.initBanner(),this.loop(),this.listenPageControl(),this.listenBannerHover(),this.listenArrowClick()},$(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
