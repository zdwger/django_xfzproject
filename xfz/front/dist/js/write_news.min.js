function News(){}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenUploadFielEvent=function(){var n=$("#thumbnail-btn");n.change(function(){var e=n[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){200===e.code&&(e=e.data.url,$("#thumbnail-form").val(e))}})})},News.prototype.listenQiniuUploadFileEvent=function(){var a=this;$("#thumbnail-btn").change(function(){var i=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){var t,n,o;200===e.code&&(t=e.data.token,o={fname:n=(new Date).getTime()+"."+i.name.split(".")[1],params:{},mimeType:["image/png","image/jpeg","image/gif","video/x-ms-wmv"]},e={useCdnDomain:!0,retryCount:6,region:qiniu.region.z0},qiniu.upload(i,n,t,o,e).subscribe({next:a.handleFileUploadProgress,error:a.handleFileUploadError,complete:a.handleFileUploadComplete}))}})})},News.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";News.progressGroup.show();e=$(".progress-bar");e.css({width:t}),e.text(t)},News.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),$("#progress-group").hide(),console.log(e.message)},News.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();e="http://qj7j4v4i9.hd-bkt.clouddn.com/"+e.key;$("input[name='thumbnail']").val(e)},News.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$(this).attr("data-news-id"),n=$("input[name='title']").val(),o=$("select[name='category']").val(),i=$("input[name='desc']").val(),a=$("input[name='thumbnail']").val(),s=window.ue.getContent(),e="",e=t?"/cms/edit_news/":"/cms/write_news/";xfzajax.post({url:e,data:{title:n,category:o,desc:i,thumbnail:a,content:s,pk:t},success:function(e){200===e.code&&xfzalert.alertSuccess("恭喜！新闻发表成功！",function(){window.location.reload()})}})})},News.prototype.run=function(){var e=this;e.listenQiniuUploadFileEvent(),e.initUEditor(),e.listenSubmitEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
